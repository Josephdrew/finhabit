"""create budget_choice table

Revision ID: d49339c24dc8
Revises: 0da66bc29868
Create Date: 2025-07-23 21:06:50.930391

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd49339c24dc8'
down_revision: Union[str, Sequence[str], None] = '0da66bc29868'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('budget_choice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('needs_percentage', sa.Float(), nullable=False),
    sa.Column('wants_percentage', sa.Float(), nullable=False),
    sa.Column('savings_percentage', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budget_choice_id'), 'budget_choice', ['id'], unique=False)
    op.drop_index(op.f('ix_demo_id'), table_name='demo')
    op.drop_table('demo')
    op.drop_index(op.f('ix_net_worth_transaction_id'), table_name='net_worth_transaction')
    op.drop_index(op.f('ix_net_worth_transaction_user_id'), table_name='net_worth_transaction')
    op.drop_table('net_worth_transaction')
    op.drop_index(op.f('ix_bank_transaction_id'), table_name='bank_transaction')
    op.drop_index(op.f('ix_bank_transaction_user_id'), table_name='bank_transaction')
    op.drop_table('bank_transaction')
    op.drop_index(op.f('ix_mf_transaction_id'), table_name='mf_transaction')
    op.drop_index(op.f('ix_mf_transaction_user_id'), table_name='mf_transaction')
    op.drop_table('mf_transaction')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mf_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('mf_transaction_pkey'))
    )
    op.create_index(op.f('ix_mf_transaction_user_id'), 'mf_transaction', ['user_id'], unique=False)
    op.create_index(op.f('ix_mf_transaction_id'), 'mf_transaction', ['id'], unique=False)
    op.create_table('bank_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('bank_transaction_pkey'))
    )
    op.create_index(op.f('ix_bank_transaction_user_id'), 'bank_transaction', ['user_id'], unique=False)
    op.create_index(op.f('ix_bank_transaction_id'), 'bank_transaction', ['id'], unique=False)
    op.create_table('net_worth_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('net_worth_transaction_pkey'))
    )
    op.create_index(op.f('ix_net_worth_transaction_user_id'), 'net_worth_transaction', ['user_id'], unique=False)
    op.create_index(op.f('ix_net_worth_transaction_id'), 'net_worth_transaction', ['id'], unique=False)
    op.create_table('demo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('demo_pkey')),
    sa.UniqueConstraint('email', name=op.f('demo_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_demo_id'), 'demo', ['id'], unique=False)
    op.drop_index(op.f('ix_budget_choice_id'), table_name='budget_choice')
    op.drop_table('budget_choice')
    # ### end Alembic commands ###
